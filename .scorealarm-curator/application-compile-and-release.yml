# Generated by Curator v2
# Surgy v1 release

.compile_changes: &compile_changes
  changes:
    - config/**/*
    - lib/**/*
    - priv/**/*
    - front/**/*
    - rel/**/*
    - test/**/*
    - mix.exs
    - mix.lock
    - .gitlab-ci.yml
    - .scorealarm-curator/application-compile-and-release.yml

.documentation_changes: &documentation_changes
  changes:
    - .doc/**/*
    - .scorealarm-curator/application-compile-and-release.yml

# FIX: maybe it would be good way to provides this through Go template
# so it can be changed on one place for both: relase and deploy jobs
# IF MAKING CHANGES HERE, PLEASE COPY IT TO DEPLOY JOB ALSO
.release_changes: &release_changes
  changes:
    - config/**/*
    - lib/**/*
    - priv/**/*
    - front/**/*
    - rel/**/*
    - mix.exs
    - mix.lock
    - .gitlab-ci.yml
    - .scorealarm-curator/application-compile-and-release.yml


develop test:
  tags: ["scorealarm", "test", "amd64"]
  stage: test
  retry: 2
  interruptible: true
  timeout: 30m
  except:
    refs:
      - schedules
      - triggers
  only:
    <<: *compile_changes
    refs:
      - /^develop$/
  script:
    - MIX_ENV=prod_test mix surgy_ci.test


copy documentation:
  tags: ["scorealarm", "test", "amd64"]
  stage: test
  allow_failure: true
  retry: 2
  interruptible: true
  timeout: 30m
  except:
    refs:
      - schedules
      - triggers
  only:
    <<: *documentation_changes
    refs:
      - /^develop$/
  script:
    - MIX_ENV=prod_test mix surgy_ci.docs

test:
  tags: ["scorealarm", "test", "amd64"]
  stage: test
  timeout: 30m
  except:
    refs:
      - schedules
      - triggers
  only:
    <<: *compile_changes
    refs:
      - /^feat.*$/
      - /^fix.*$/
      - /^refactor.*$/
  script:
    - MIX_ENV=prod_test mix surgy_ci.test


deps audit:
  tags: ["scorealarm", "test", "amd64"]
  stage: test
  allow_failure: false
  retry: 2
  interruptible: true
  timeout: 30m
  except:
    refs:
      - schedules
      - triggers
  only:
    <<: *release_changes
    refs:
      - /^develop$/
  script:
    - mix escript.install git https://github.com/mirego/mix_audit tag v0.1.4 --force
    - ~/.mix/escripts/mix_audit --ignore-package-names $ELIXIR_AUDIT_EXCLUDE

credo check:
  tags: ["scorealarm", "test", "amd64"]
  stage: test
  allow_failure: true
  retry: 0
  interruptible: true
  timeout: 30m
  except:
    refs:
      - schedules
      - triggers
  only:
    <<: *release_changes
    refs:
      - /^develop$/
  script:
    - mix escript.install git https://github.com/rrrene/credo tag v1.6.1 --force
    - mix surgy_ci.configure_credo
    - ~/.mix/escripts/credo


release:
  tags: ["scorealarm", "release", "amd64"]
  stage: compile
  retry: 2
  timeout: 30m
  rules:
  - if: '$CI_PIPELINE_SOURCE == "trigger" && $MANUAL_RELEASE_TRIGGER == "true"'
    when: always
  - if: '$CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "trigger"'
    when: never
  - if: '$CI_COMMIT_BRANCH == "develop"'
    <<: *release_changes
    when: on_success
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - MIX_ENV=prod mix surgy_ci.release
